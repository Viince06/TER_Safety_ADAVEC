L1 = a;
L2 = AddClock1(L1);
v = L2;
L1 = b;
L2 = AddClock1(L1);
v = L2;
L1 = c;
L2 = AddClock1(L1);
v = L2;
L1 = d;
L2 = AddClock1(L1);
v = L2;
L1 = e;
L2 = AddClock1(L1);
v = L2;
L1 = f;
L2 = AddClock1(L1);
v = L2;
L1 = a;
L2 = b;
L3 = SubClock(L1, L2);
v = L3;
L1 = a;
L2 = b;
L3 = kind;
L4 = Precedence(L1, L2, L3);
v = L4;
L1 = b;
L2 = c;
L3 = 2;
L4 = 5;
L5 = kind
L6 = Precedence2(L1, L2, L3, L4, L5);
v = L6
L1 = c;
L2 = d;
L3 = 2;
L4 = -1;
L5 = kind
L6 = Causality2(L1, L2, L3, L4, L5);
v = L6
L1 = a;
L2 = c;
L3 = Exclusion(L1, L2);
v = L3;
L1 = test;
L2 = [Ljava.lang.String;@1ef7fe8e;
L3 = Minus(L1, L2);
c = L3;
L1 = _test2_0;
L2 = [Ljava.lang.String;@6f79caec;
L3 = Union(L1, L2);
c = L3;
L1 = test2;
L2 = [Ljava.lang.String;@67117f44;
L3 = Minus(L1, L2);
c = L3;
L1 = _test3_0;
L2 = [Ljava.lang.String;@5d3411d;
L3 = Intersection(L1, L2);
c = L3;
L1 = test3;
L2 = [Ljava.lang.String;@2471cca7;
L3 = Minus(L1, L2);
c = L3;
L1 = aprime;
L2 = a;
L3 = 5;
L4 = 3;
L5 = 10;
L6 = Periodic(L1, L2, L3, L4, L5);
v = L6;
L1 = g;
L2 = a;
L3 = 5;
L4 = -1;
L5 = b;
L6 = DelayFor(L1, L2, L3, L4, L5);
v = L6;
L1 = h;
L2 = a;
L3 = 5;
L4 = -1;
L5 = null;
L6 = DelayFor(L1, L2, L3, L4, L5);
v = L6;
L1 = i;
L2 = a;
L3 = 5;
L4 = 10;
L5 = null;
L6 = DelayFor(L1, L2, L3, L4, L5);
v = L6;
L1 = l;
L2 = a;
L3 = 0;
L4 = -1;
L5 = b;
L6 = DelayFor(L1, L2, L3, L4, L5);
v = L6;
L1 = j;
L2 = [Ljava.lang.String;@5fe5c6f;
L3 = Inf(L1, L2);
c = L3;
L1 = k;
L2 = [Ljava.lang.String;@6979e8cb;
L3 = Sup(L1, L2);
c = L3;
